
@{
    ViewBag.Title = "Owners";
    Layout = "~/Views/Shared/_Default.cshtml";
}


<div class="fha-grid-mantenimientos-content-center">


    @model System.Collections.Generic.IEnumerable<SitioAdministrativoUI.Models.Data.Propietario>


    @(Html.Kendo().Grid(Model)

            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(p => p.IdPropietario).Width(25).Title("");
                columns.Bound(p => p.Nombre).Width(175);
                columns.Bound(p => p.Descripcion).Width(175);
                columns.Command(command => { command.Edit().Text("Actualizar"); command.Destroy().Text("Eliminar"); }).Width(200);
            })
                    .ToolBar(toolbar => toolbar.Create().Text("Nuevo"))
                .Editable(editable => editable.Mode(GridEditMode.InLine))
                    .Filterable(f =>
                    {
                        f.Extra(false);
                    })
                    .Pageable(p =>
                    {
                        p.Refresh(true);
                    })

            .Sortable()
            .Scrollable()
            .HtmlAttributes(new { style = "height:430px;" })
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                       .Events(events =>
                        {
                            events.Change("GridReload");
                            events.Error("error_handler");
                        })
                        .Model(model =>
                        {
                            model.Id(p => p.IdPropietario);
                            model.Field(p => p.IdPropietario).Editable(false);
                            model.Field(p => p.Activo).DefaultValue(true);

                        })
                        .Create(update => update.Action("Owner_Create", "GeneralManager"))
                                            .Read(read => read.Action("Owner_Read", "GeneralManager"))
                                            .Update(update => update.Action("Owner_Update", "GeneralManager"))
                                            .Destroy(update => update.Action("Owner_Destroy", "GeneralManager"))
            )
    )

</div>




<script type="text/javascript">

    function urlPropietario(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        urlCargar = dataItem.Url;
        window.open(urlCargar);
    }
</script>




<script type="text/javascript">

    $(document).ready(function () {
        var Notificacion = $("#Notificacion").data("kendoNotification");
        var flag = "@ViewBag.isError"
        if (flag == "Error") {
            Notificacion.show({
                title: "Nueva Notificación",
                message: "@ViewBag.Error"
            }, "error");

        }
        else if (flag == "Exito") {
            Notificacion.show({
                title: "Nueva Notificación",
                message: "Operación exitosa"
            }, "exito");
        }
    })

    function GridReload(e) {

        if (e.action == "sync") {
            $("#grid").data("kendoGrid").dataSource.read();
        }
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
            //Notificacion.show({
            //    title: "Nueva Notificación",
            //    message: message
            //}, "error");
        }
    }
</script>

