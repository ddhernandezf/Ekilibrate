@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Salon";
    ViewBag.Description = "Salon";
    Layout = "~/Views/Shared/_Default.cshtml";
}

<h2>Salon</h2>
<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header bg-themeprimary ">
                <span class="widget-caption">Listado de Empresas</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>
                    @*<a href="#" data-toggle="dispose">
                            <i class="fa fa-times"></i>
                        </a>*@
                </div>
            </div>
            <div class="widget-body">
                @(Html.Kendo().Grid<Ekilibrate.Model.Administrador.clsSalonBase>()

                    .Name("grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Id).Width(25).Title("").EditorTemplateName("ReadOnlyTemplate");
                        columns.Bound(p => p.Nombre).Width(175);
                        columns.Bound(p => p.Capacidad).Width(175);
                        columns.Bound(p => p.EmpresaId).Width(175);
                        columns.ForeignKey(p => p.TipoUsoId, (System.Collections.IEnumerable)ViewBag.TipoUsoSalon, "Id", "Nombre").Width(150).Title("Uso");
                        columns.Command(command =>
                        {
                            command.Edit().Text(" ");
                            command.Destroy().Text(" ");
                            command.Custom("Salones").Text("Salones").Click("MostrarSalones");
                        }).Width(200);
                    })
                            .ToolBar(toolbar => toolbar.Create().Text("Nuevo"))
                        .Editable(editable => editable.Mode(GridEditMode.PopUp))
                            .Filterable(f =>
                            {
                                f.Extra(false);
                            })
                            .Pageable(p =>
                            {
                                p.Refresh(true);
                            })
                    .Sortable()
                    .Scrollable()
                    .HtmlAttributes(new { style = "height:430px;" })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Events(events => events.Error("error_handler"))
                        .PageSize(10)
                                .Model(model =>
                                {
                                    model.Id(p => p.Id);
                                    model.Field(p => p.EmpresaId);
                                })
                                .Create(update => update.Action("Create", "Salon"))
                                .Read(read => read.Action("Read", "Salon"))
                                .Update(update => update.Action("Update", "Salon"))
                                .Destroy(update => update.Action("Delete", "Salon"))
                    )
                )
            </div>
        </div>
    </div>
</div>