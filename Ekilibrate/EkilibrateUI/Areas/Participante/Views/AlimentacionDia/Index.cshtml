@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Pasos por dia";
    ViewBag.Description = "Pasos por dia";
    Layout = "~/Views/Shared/_Default.cshtml";

    List<String> TitleList = (List<String>)ViewBag.TitleList;
    List<Int32> MetaList = (List<Int32>)ViewBag.MetaList;
    List<Int32> ComidoList = (List<Int32>)ViewBag.ComidoList;

    Int32 MaxMeta = (Int32)ViewBag.MaxMeta;
    Int32 AvgMeta = (Int32)ViewBag.AvgMeta;
    Int32 AvgComidos = (Int32)ViewBag.AvgComidos;
}

<h2><img src='~/assets/img/icons/Business-32.png' /> &ensp; Plan de alimentacion</h2>

<div class="row">
    <div class="col-xs-12 col-md-12">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Calorias semana (@AvgMeta)</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                    <a href="#" data-toggle="collapse">
                        <i class="fa fa-minus"></i>
                    </a>

                </div>
            </div>
            <div class="row-pasos">
                <div class="Grid">
                    <div class="widget-body">
                        @(Html.Kendo().Grid<Ekilibrate.Model.Entity.Participante.clsAlimentacionDiaBase>()

                    .Name("grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Id).Width(0).Hidden();
                        columns.Bound(p => p.ParticipanteId).Width(0).Hidden();
                        columns.Bound(p => p.GrupoAlimentoId).Width(0).Hidden();
                        columns.Bound(p => p.SemanaId).Width(0).Hidden();
                        columns.Bound(p => p.Dia).Width(0).Hidden();
                        columns.Bound(p => p.ProyectoId).Width(0).Hidden();

                        columns.Bound(p => p.NombreDia).Width(100).Title("Dia");
                        columns.Bound(p => p.NombreAlimento).Width(100).Title("Alimento");
                        columns.Bound(p => p.Meta).Width(100).Title("Permitido");
                        columns.Bound(p => p.Comido).Width(100).Title("Consumido");
                    })
                            .ToolBar(toolbar => toolbar.Save())
                        .Editable(editable => editable.Mode(GridEditMode.InCell))
                            .Filterable(f =>
                            {
                                f.Extra(false);
                            })
                            .Pageable(p =>
                            {
                                p.Refresh(true);
                            })
                    .Sortable()
                    .Scrollable()
                    .HtmlAttributes(new { style = "height:430px;" })
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Batch(true)
                        .ServerOperation(false)
                        .Events(events =>
                        {
                            events.Error("error_handler");
                            events.Change("change_handler");
                        }
                        )
                        .PageSize(9)
                        .Model(model =>
                        {
                            model.Id(p => p.Id);
                            model.Field(p => p.NombreAlimento).Editable(false);
                            model.Field(p => p.Meta).Editable(false);
                        })
                        .Read(read => read.Action("Read", "AlimentacionDia"))
                        .Update(update => update.Action("Update", "AlimentacionDia"))
                    )
                        )
                    </div>
                </div>
                <div class="objGraph1">
                    @(Html.Kendo().Chart()
        .Name("chart")
        .Title("Meta de la semana: " + AvgMeta.ToString() + " calorias diarias \n Consumo diario")
        .Legend(legend => legend
            .Position(ChartLegendPosition.Top)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .Series(series =>
        {
            series.Column(MetaList).Name("Meta");
            series.Column(ComidoList).Name("Caminados");
        })
        .CategoryAxis(axis => axis
            .Name("series-axis")
            .Line(line => line.Visible(false))
        )
        .CategoryAxis(axis => axis
            .Name("label-axis")
            .Categories(TitleList)
        )
        .ValueAxis(axis => axis
            .Numeric()
                .Labels(labels => labels.Format("{0}"))

                // Move the label-axis all the way down the value axis
                .AxisCrossingValue(0, MaxMeta)
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Format("{0}%")
            .Template("#= series.name #: #= value #")
        )
                    )

                </div>
            </div>
            <div class="row-pasos">
                <div class="objGraph2">
                    @(Html.Kendo().Chart()
        .Name("chart2")
        .Title("Avance Semanal")
        .Legend(legend => legend
            .Visible(false)
        )
        .ChartArea(chartArea => chartArea
            .Background("transparent")
        )
        .Series(series =>
        {
            series.Bar(new double[] { AvgComidos, AvgMeta }).Name("Avance");
        })
        .CategoryAxis(axis => axis
            .Categories("Promedio de avance", "Meta diaria")
            .MajorGridLines(lines => lines.Visible(false))
        )
        .ValueAxis(axis => axis
            .Numeric()
            .Max(MaxMeta)
            .Line(line => line.Visible(false))
            .MajorGridLines(lines => lines.Visible(true))
        )
        .Tooltip(tooltip => tooltip
            .Visible(true)
            .Template("#= series.name #: #= value #")
        )
                    )

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .row-pasos {
        width: 100%;
        position: relative;
        display: inline-block;
        padding-bottom: 15px;
    }

        .row-pasos .Grid {
            float: left;
            width: 40%;
            padding-top: 10px;
        }

        .row-pasos .objGraph1 {
            float: left;
            margin-left: 2%;
            width: 58%;
        }

        .row-pasos .objGraph2 {
            width: 60%;
            padding-top: 15px;
            margin-left: 20%;
        }
</style>

<script type="text/javascript">
    function change_handler(e) {
        //console.log(e);
        if (e.action == "sync") {
            //$("#spinner").show();
            location.reload();
        }
    }
</script>