@using Kendo.Mvc.UI;
@{
    //ViewBag.Title = "Pasos por dia";
    //ViewBag.Description = "Pasos por dia";
    Layout = "~/Views/Shared/_Empty.cshtml";

    List<String> TitleList = (List<String>)ViewBag.TitleList;
    List<Int32> MetaList = (List<Int32>)ViewBag.MetaList;
    List<Int32> PasosList = (List<Int32>)ViewBag.PasosList;

    Int32 MaxMeta = (Int32)ViewBag.MaxMeta;
    Int32 AvgMeta = (Int32)ViewBag.AvgMeta;
    Int32 AvgPasos = (Int32)ViewBag.AvgPasos;
}

@*@using (Html.BeginForm("Index", "Alimentos", FormMethod.Post, new { id = "myform" }))
{*@
<div class="row">
    <div class="col-xs-12 col-md-6">
        <div class="widget">
            <div class="widget-header ">
                <span class="widget-caption">Pasos semana (@AvgMeta)</span>
            </div>
            <div class="widget-body">
                <div class="row-pasos">
                    @(Html.Kendo().Grid<Ekilibrate.Model.Entity.Participante.clsPasosDiaBase>()
                                    .Name("gridPasos")
                                    .Columns(columns =>
                                    {
                                        columns.Bound(p => p.Id).Width(0).Hidden();
                                        columns.Bound(p => p.Dia).Width(0).Hidden();
                                        columns.Bound(p => p.SemanaId).Width(0).Hidden();
                                        columns.Bound(p => p.ParticipanteId).Width(0).Hidden();
                                        columns.Bound(p => p.ProyectoId).Width(0).Hidden();
                                        columns.Bound(p => p.Meta).Width(0).Hidden();
                                        columns.Bound(p => p.NombreDia).Title("Dia").Filterable(false).Sortable(false);
                                        columns.Bound(p => p.Caminados).Title("Pasos").Filterable(false).Sortable(false);
                                    })
                                    .ToolBar(toolbar =>
                                    {
                                        toolbar.Save();
                                    })
                                    .Editable(editable => editable.Mode(GridEditMode.InCell))
                                    .Navigatable()
                                    .Filterable(f =>
                                    {
                                        f.Enabled(false);
                                        f.Extra(false);
                                    })
                                    .Pageable(p =>
                                    {
                                        p.Enabled(false);
                                        p.Refresh(true);
                                    })                                    
                                    .Scrollable(s => s.Height("auto"))
                                    //.HtmlAttributes(new { style = "height:98%;" })
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Batch(true)
                                        .ServerOperation(false)
                                        .Events(events =>
                                        {
                                            events.Error("error_handler");
                                            //events.Edit("selectText");
                                        })
                                        .PageSize(20)
                                        .Model(model =>
                                        {
                                            model.Id(p => p.NombreDia);
                                            model.Field(p => p.NombreDia).Editable(false);
                                            model.Field(p => p.Dia).Editable(false);
                                            model.Field(p => p.SemanaId).Editable(false);
                                            model.Field(p => p.ProyectoId).Editable(false);
                                            model.Field(p => p.ParticipanteId).Editable(false);
                                            model.Field(p => p.Caminados).Editable(true);
                                            model.Field(p => p.Meta).Editable(false);
                                        })
                                        .Update(update => update.Action("Update", "PasosDia"))
                                        .Read(read => read.Action("Read", "PasosDia"))
                                    )
                    )
                </div>
                <div class="row">
                    <div class="objGraph1">
                        @(Html.Kendo().Chart()
                        .Name("chart")
                        .Title("Meta de la semana: " + AvgMeta.ToString() + " pasos diarios \n Avance diario")
                        .Legend(legend => legend
                            .Position(ChartLegendPosition.Top)
                        )
                        .ChartArea(chartArea => chartArea
                            .Background("transparent")
                        )
                        .Series(series =>
                        {
                            series.Column(MetaList).Name("Meta");
                            series.Column(PasosList).Name("Caminados");
                        })
                        .CategoryAxis(axis => axis
                            .Name("series-axis")
                            .Line(line => line.Visible(false))
                        )
                        .CategoryAxis(axis => axis
                            .Name("label-axis")
                            .Categories(TitleList)
                        )
                        .ValueAxis(axis => axis
                            .Numeric()
                                .Labels(labels => labels.Format("{0}"))

                                // Move the label-axis all the way down the value axis
                                .AxisCrossingValue(0, MaxMeta)
                        )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Format("{0}%")
                            .Template("#= series.name #: #= value #")
                        )
                        )

                    </div>
                </div>
                <div class="row">
                    <div class="objGraph2">
                        @(Html.Kendo().Chart()
                            .Name("chart2")
                            .Title("Avance Semanal")
                            .Legend(legend => legend
                                .Visible(false)
                            )
                            .ChartArea(chartArea => chartArea
                                .Background("transparent")
                            )
                            .Series(series =>
                            {
                                series.Bar(new double[] { AvgPasos, AvgMeta }).Name("Avance");
                            })
                            .CategoryAxis(axis => axis
                                .Categories("Promedio de avance", "Meta diaria")
                                .MajorGridLines(lines => lines.Visible(false))
                            )
                            .ValueAxis(axis => axis
                                .Numeric()
                                .Max(MaxMeta)
                                .Line(line => line.Visible(false))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= series.name #: #= value #")
                            )
                        )

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .row-pasos {
        width: 100%;
        position: relative;
        display: inline-block;
        padding-bottom: 15px;
    }

        .row-pasos .Grid {
            float: left;
            width: 40%;
            padding-top: 10px;
        }

        .row-pasos .objGraph1 {
            float: left;
            margin-left: 2%;
            width: 58%;
        }

        .row-pasos .objGraph2 {
            width: 60%;
            padding-top: 15px;
            margin-left: 20%;
        }
</style>

<script type="text/javascript">
    function change_handler(e) {
        //console.log(e);
        if (e.action == "sync") {
            //$("#spinner").show();
            location.reload();
        }
    }

    $("#gridPasos").on('edit', function () {
        e.container.find("td:eq(2) input").focus();
    });
</script>